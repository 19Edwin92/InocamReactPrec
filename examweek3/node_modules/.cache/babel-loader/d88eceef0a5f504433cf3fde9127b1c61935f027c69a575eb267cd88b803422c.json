{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n/**\n * 2초 지연을 시키는 함수입니다 (비동기 작업).\n */\nimport { waitTwoSeconds } from '../../utils';\nexport const __getToDo = createAsyncThunk('__getToDo', async (_, thunkAPI) => {\n  try {\n    let res = await axios.get('http://localhost:3001/todos');\n    return thunkAPI.fulfillWithValue(res.data);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n});\nexport const __addToDo = createAsyncThunk('__addToDo', waitTwoSeconds(async (payload, thunkAPI) => {\n  try {\n    // await axios.post('http://localhost:3001/todos', payload)\n    // return payload\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.message);\n  }\n}));\nexport const __deleteTodo = createAsyncThunk('__deleteToDo', async (payload, thunkAPI) => {});\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  isError: false,\n  error: null\n};\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(__getToDo.pending, state => {\n      state.isLoading = true;\n      state.isError = false;\n    }).addCase(__getToDo.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.todos = [...action.payload];\n    }).addCase(__getToDo.rejected, state => {\n      state.isLoading = false;\n      state.isError = true;\n    });\n  }\n});\nexport default todosSlice.reducer;\nexport const selectTodos = state => state.todos;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","waitTwoSeconds","__getToDo","_","thunkAPI","res","get","fulfillWithValue","data","error","rejectWithValue","message","__addToDo","payload","__deleteTodo","initialState","todos","isLoading","isError","todosSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","rejected","reducer","selectTodos"],"sources":["/Users/edwin.youngchan.park/Documents/sparta/inocamp/03주특기/InocamReactPrec/examweek3/src/redux/modules/todosSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios'\n\n/**\n * 2초 지연을 시키는 함수입니다 (비동기 작업).\n */\nimport { waitTwoSeconds } from '../../utils';\n\nexport const __getToDo = createAsyncThunk(\n  '__getToDo',\n  async (_, thunkAPI) => {\n    try {\n      let res = await axios.get('http://localhost:3001/todos')\n      return thunkAPI.fulfillWithValue(res.data)\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message)\n    }\n  }\n)\n\nexport const __addToDo = createAsyncThunk(\n  '__addToDo',\n  waitTwoSeconds(  async (payload, thunkAPI) => {\n    try {\n      // await axios.post('http://localhost:3001/todos', payload)\n      // return payload\n    }\n    catch (error) {\n      return thunkAPI.rejectWithValue(error.message)\n    }\n  })\n);\n\nexport const __deleteTodo = createAsyncThunk(\n  '__deleteToDo',\n  async (payload, thunkAPI) => {}\n);\n\nconst initialState = {\n  todos : [],\n  isLoading: false,\n  isError : false,\n  error :null\n};\n\nconst todosSlice = createSlice({\n  name: 'todos',\n  initialState,\n  extraReducers : builder => {\n    builder\n      .addCase(__getToDo.pending, (state) => {\n        state.isLoading = true;\n        state.isError = false;\n      })\n      .addCase(__getToDo.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isError = false;\n        state.todos = [...action.payload]\n      })\n      .addCase(__getToDo.rejected, (state) => {\n        state.isLoading = false;\n        state.isError = true;\n      })\n  }\n});\n\nexport default todosSlice.reducer;\nexport const selectTodos = (state) => state.todos\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA,SAASC,cAAc,QAAQ,aAAa;AAE5C,OAAO,MAAMC,SAAS,GAAGJ,gBAAgB,CACvC,WAAW,EACX,OAAOK,CAAC,EAAEC,QAAQ,KAAK;EACrB,IAAI;IACF,IAAIC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,6BAA6B,CAAC;IACxD,OAAOF,QAAQ,CAACG,gBAAgB,CAACF,GAAG,CAACG,IAAI,CAAC;EAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAOL,QAAQ,CAACM,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGd,gBAAgB,CACvC,WAAW,EACXG,cAAc,CAAG,OAAOY,OAAO,EAAET,QAAQ,KAAK;EAC5C,IAAI;IACF;IACA;EAAA,CACD,CACD,OAAOK,KAAK,EAAE;IACZ,OAAOL,QAAQ,CAACM,eAAe,CAACD,KAAK,CAACE,OAAO,CAAC;EAChD;AACF,CAAC,CACH,CAAC;AAED,OAAO,MAAMG,YAAY,GAAGhB,gBAAgB,CAC1C,cAAc,EACd,OAAOe,OAAO,EAAET,QAAQ,KAAK,CAAC,CAChC,CAAC;AAED,MAAMW,YAAY,GAAG;EACnBC,KAAK,EAAG,EAAE;EACVC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAG,KAAK;EACfT,KAAK,EAAE;AACT,CAAC;AAED,MAAMU,UAAU,GAAGpB,WAAW,CAAC;EAC7BqB,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,aAAa,EAAGC,OAAO,IAAI;IACzBA,OAAO,CACJC,OAAO,CAACrB,SAAS,CAACsB,OAAO,EAAGC,KAAK,IAAK;MACrCA,KAAK,CAACR,SAAS,GAAG,IAAI;MACtBQ,KAAK,CAACP,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDK,OAAO,CAACrB,SAAS,CAACwB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACT,KAAK,GAAG,CAAC,GAAGW,MAAM,CAACd,OAAO,CAAC;IACnC,CAAC,CAAC,CACDU,OAAO,CAACrB,SAAS,CAAC0B,QAAQ,EAAGH,KAAK,IAAK;MACtCA,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACP,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeC,UAAU,CAACU,OAAO;AACjC,OAAO,MAAMC,WAAW,GAAIL,KAAK,IAAKA,KAAK,CAACT,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}