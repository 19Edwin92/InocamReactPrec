{"ast":null,"code":"import { instance } from \"./axiosInstance\";\nimport { createApi } from '@reduxjs/toolkit/query/react';\nconst axiosBaseQuery = () => async _ref => {\n  let {\n    url,\n    method,\n    data\n  } = _ref;\n  try {\n    const res = await instance({\n      method,\n      url,\n      data\n    });\n    return {\n      data: res.data\n    };\n  } catch (error) {\n    return console.log(\"에러\", error);\n  }\n};\nexport const todoRTKquery = createApi({\n  baseQuery: axiosBaseQuery(),\n  tagTypes: ['TODO'],\n  endpoints: builder => ({\n    getTodoRTK: builder.query({\n      query: () => ({\n        url: \"/todos\",\n        method: \"get\"\n      }),\n      providesTags: [\"TODO\"]\n    }),\n    postTodoRTK: builder.query({\n      query: () => ({\n        url: \"/todos\",\n        method: \"get\"\n      }),\n      providesTags: [\"TODO\"]\n    })\n  })\n});\nexport const {\n  useGetTodoRTKQuery\n} = todoRTKquery;\n\n/*\n  RTK Query \n  1) Redux 태생이지만, Redux와 무관하게 동작할 수도 있습니다. \n  2) [생활코딩  RTK Query](https://www.youtube.com/watch?v=pnpO3o8mLBU)\n  3) use...query 자동실행 // 객체를 \n      보통 isFetching으로 확인합니다. \n  4) use...Mutation 함수호출시 서버로 데이터를 전송한다. \n      isFetching이 없습니다. isLoading이 있습니다. \n\n\n*/","map":{"version":3,"names":["instance","createApi","axiosBaseQuery","_ref","url","method","data","res","error","console","log","todoRTKquery","baseQuery","tagTypes","endpoints","builder","getTodoRTK","query","providesTags","postTodoRTK","useGetTodoRTKQuery"],"sources":["/Users/edwin.youngchan.park/Documents/sparta/inocamp/03주특기/InocamReactPrec/axios-thunk/src/api/todoRTKquery.js"],"sourcesContent":["import { instance } from \"./axiosInstance\";\nimport { createApi } from '@reduxjs/toolkit/query/react'\n\nconst axiosBaseQuery = () => async ({url, method, data}) => {\n  try {\n    const res = await instance({\n      method,\n      url,\n      data\n    })\n    return {data: res.data}\n  } catch (error) {\n    return console.log(\"에러\", error);\n  }\n}\n\nexport const todoRTKquery = createApi({\n  baseQuery: axiosBaseQuery(),\n  tagTypes: ['TODO'],\n  endpoints : builder => ({\n    getTodoRTK : builder.query({\n      query: () => ({url:\"/todos\", method:\"get\"}),\n      providesTags: [\"TODO\"]\n    }),\n    postTodoRTK : builder.query({\n      query: () => ({url:\"/todos\", method:\"get\"}),\n      providesTags: [\"TODO\"]\n    })\n  })\n})\n\nexport const {useGetTodoRTKQuery} = todoRTKquery;\n\n\n\n/*\n  RTK Query \n  1) Redux 태생이지만, Redux와 무관하게 동작할 수도 있습니다. \n  2) [생활코딩  RTK Query](https://www.youtube.com/watch?v=pnpO3o8mLBU)\n  3) use...query 자동실행 // 객체를 \n      보통 isFetching으로 확인합니다. \n  4) use...Mutation 함수호출시 서버로 데이터를 전송한다. \n      isFetching이 없습니다. isLoading이 있습니다. \n\n\n*/"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,SAAS,QAAQ,8BAA8B;AAExD,MAAMC,cAAc,GAAGA,CAAA,KAAM,MAAAC,IAAA,IAA+B;EAAA,IAAxB;IAACC,GAAG;IAAEC,MAAM;IAAEC;EAAI,CAAC,GAAAH,IAAA;EACrD,IAAI;IACF,MAAMI,GAAG,GAAG,MAAMP,QAAQ,CAAC;MACzBK,MAAM;MACND,GAAG;MACHE;IACF,CAAC,CAAC;IACF,OAAO;MAACA,IAAI,EAAEC,GAAG,CAACD;IAAI,CAAC;EACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,OAAOC,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEF,KAAK,CAAC;EACjC;AACF,CAAC;AAED,OAAO,MAAMG,YAAY,GAAGV,SAAS,CAAC;EACpCW,SAAS,EAAEV,cAAc,CAAC,CAAC;EAC3BW,QAAQ,EAAE,CAAC,MAAM,CAAC;EAClBC,SAAS,EAAGC,OAAO,KAAK;IACtBC,UAAU,EAAGD,OAAO,CAACE,KAAK,CAAC;MACzBA,KAAK,EAAEA,CAAA,MAAO;QAACb,GAAG,EAAC,QAAQ;QAAEC,MAAM,EAAC;MAAK,CAAC,CAAC;MAC3Ca,YAAY,EAAE,CAAC,MAAM;IACvB,CAAC,CAAC;IACFC,WAAW,EAAGJ,OAAO,CAACE,KAAK,CAAC;MAC1BA,KAAK,EAAEA,CAAA,MAAO;QAACb,GAAG,EAAC,QAAQ;QAAEC,MAAM,EAAC;MAAK,CAAC,CAAC;MAC3Ca,YAAY,EAAE,CAAC,MAAM;IACvB,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAACE;AAAkB,CAAC,GAAGT,YAAY;;AAIhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}