{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport todoSlice from '../modules/todoSlice';\nimport { todoRTKquery } from \"../../api/todoRTKquery\";\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\nexport const store = configureStore({\n  reducer: {\n    todoSlice,\n    [todoRTKquery.reducerPath]: todoRTKquery.reducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(todoRTKquery.middleware)\n});\nsetupListeners(store.dispatch);","map":{"version":3,"names":["configureStore","getDefaultMiddleware","todoSlice","todoRTKquery","setupListeners","store","reducer","reducerPath","middleware","concat","dispatch"],"sources":["/Users/edwin.youngchan.park/Documents/sparta/inocamp/03주특기/InocamReactPrec/axios-thunk/src/redux/config/configStore.js"],"sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport todoSlice from '../modules/todoSlice'\nimport { todoRTKquery } from \"../../api/todoRTKquery\";\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\n\nexport const store = configureStore({\n  reducer:{\n    todoSlice,\n    [todoRTKquery.reducerPath] : todoRTKquery.reducer\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(todoRTKquery.middleware)\n})\n\nsetupListeners(store.dispatch)"],"mappings":"AAAA,SAASA,cAAc,EAAEC,oBAAoB,QAAQ,kBAAkB;AACvE,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,cAAc,QAAQ,6BAA6B;AAE5D,OAAO,MAAMC,KAAK,GAAGL,cAAc,CAAC;EAClCM,OAAO,EAAC;IACNJ,SAAS;IACT,CAACC,YAAY,CAACI,WAAW,GAAIJ,YAAY,CAACG;EAC5C,CAAC;EACDE,UAAU,EAAGP,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC,CAACQ,MAAM,CAACN,YAAY,CAACK,UAAU;AAC7F,CAAC,CAAC;AAEFJ,cAAc,CAACC,KAAK,CAACK,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}