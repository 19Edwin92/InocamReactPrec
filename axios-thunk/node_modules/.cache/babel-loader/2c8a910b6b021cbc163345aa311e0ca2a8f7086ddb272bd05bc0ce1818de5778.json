{"ast":null,"code":"var _jsxFileName = \"/Users/edwin.youngchan.park/Documents/sparta/inocamp/03\\u110C\\u116E\\u1110\\u1173\\u11A8\\u1100\\u1175/InocamReactPrec/axios-thunk/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport { styled } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = null;\n\n/* AXIOS ------------------------------------------------------------------ */\n/* \n  네트워크 통신 라이브러리 \n  (1) 인스턴스 생성\n  (2) 인터셉터 가능 >> 통신라이브러리 >> 요청(클 -> 서)과 응답(서 -> 클)\n      요청 클라 -- (어떤 동작) --> 서버\n      응답 서버 -- (어떤 동작) --> 클라\n*/\nconst instance = axios.create({\n  baseURL: \"http://localhost:3001/\"\n}); // todos \n\n// const instance3004 = axios.create({\n//   baseURL:\"http://localhost:3004/\"\n// }) // Users\n\n// instance.interceptors.request.use(\n//   function (config) {\n//     console.log(\"인터셉터 요청 성공!\");\n//     config.headers.Authorization = token ? `Bearer ${token}` : \"\";\n//     return config\n//   },\n//   function (error) {\n//     console.log(\"인터셉터 요청 오류!\");\n//     return Promise.reject(error)\n//   } \n// )\n\n// instance.interceptors.response.use(\n//   function (config) {\n//     console.log(\"인터셉터 응답 성공!\");\n//     return config\n//   },\n//   function (error) {\n//     console.log(\"인터셉터 응답 오류!\");\n//     return Promise.reject(error)\n//   } \n// )\n\n/* App.js ------------------------------------------------------------------- */\n\nfunction App() {\n  _s();\n  // AXIOS GET 기능구현 : CRUD (1) READ\n  const [todos, setTodos] = useState();\n  const getTodos = async () => {\n    const res = await instance.get(\"/todos\");\n    setTodos(res.data);\n  }; // 비동기통신으로 서버의 데이터를 불러올 getTodos 만들었죠. 호출해야 동작을 하는데 언제 호출할까? // (1) 해당 컴포넌트에 접근했을 때 // (2) 서버 데이터가 변경되었을 때 \n\n  useEffect(() => {\n    getTodos(); // AXIOS POST (3) 서버에 다시 요청을 해서, todos와 서버의 데이터를 동기화 합니다. \n  }, [setTodos]); // 의존선배열이 변경되면, useEffect 그때마다 동작을 하니까 \n\n  // AXIOS POST 기능구현 : CRUD (2) CREATE\n  const [newtodos, setNewTodos] = useState(\"\");\n  const onChangeInput = e => {\n    setNewTodos(e.target.value);\n  };\n  const onSubmitHandler = async e => {\n    e.preventDefault();\n    setTodos([...todos, {\n      id: Date.now(),\n      title: newtodos\n    }]); // (1) 리렌더링을 발생시키기 위해서, todos의 상태를 변경합니다. // 리렌더링 준비\n    await instance.post(\"/todos\", {\n      id: Date.now(),\n      title: newtodos\n    }); // 비동기통신 // (2) 서버를 업데이트 \n    setNewTodos(\"\");\n  }; // 리렌더링 발생\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"JSON-Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newtodos,\n        type: \"text\",\n        onChange: onChangeInput,\n        maxLength: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), todos && todos.map(_ref => {\n      let {\n        id,\n        title\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Todos, {\n        todoid: id,\n        title: title,\n        todos: todos,\n        setTodos: setTodos\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 44\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rHWg4ueWR5KL9cTQWCAZtPd7VrE=\");\n_c = App;\nexport default App;\nconst Todos = _ref2 => {\n  _s2();\n  let {\n    todoid,\n    title,\n    todos,\n    setTodos\n  } = _ref2;\n  // AXIOS DELETE 기능구현 : CRUD (3) DELETE\n  const onDeleteHandler = async () => {\n    setTodos([...todos.filter(todo => todo.id !== todoid)]); // (1) 리렌더링을 발생시키기 위해서, todos의 상태를 변경합니다.  // 리렌더링 준비\n    await instance.delete(`/todos/${todoid}`); // 비동기통신 // (2) 서버를 업데이트 \n  }; // 리렌더링 발생\n\n  // AXIOS UPDATE 기능구현 : CRUD (4) UPDATE\n  const [update, setUpdate] = useState(false); // 조건부 렌더링\n  // const inputRef = useRef(null)\n  const onUpdateHandler = () => {\n    setUpdate(pre => !pre);\n  };\n  const [updatetodos, setUpdateTodos] = useState(title); // 수정할 title의 valuse\n  const onChangeInput = e => {\n    setUpdateTodos(e.target.value);\n  };\n  const onSubmitHandler = todoid => async e => {\n    e.preventDefault();\n    setTodos([...todos.map(todo => todo.id === todoid ? {\n      ...todo,\n      title: updatetodos\n    } : todo)]); // (1) 리렌더링 // 리렌더링 준비\n    await instance.patch(`/todos/${todoid}`, {\n      title: updatetodos\n    }); // PATCH(일부데이터만 수정할 때), PUT(완전히 다 바꿈, 덮어쓰기) (2) 서버를 업데이트\n    setUpdate(pre => !pre);\n  }; // 리렌더링 발생\n\n  return /*#__PURE__*/_jsxDEV(TodosBox, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onDeleteHandler,\n      children: \"\\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onUpdateHandler,\n      children: \"\\uC218\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(UPdateForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s2(Todos, \"Q6swTCnAsS9Qho6TOYM9dsLTeC0=\");\n_c2 = Todos;\nconst UPdateForm = _ref3 => {\n  _s3();\n  let {\n    onSubmit,\n    $position,\n    value,\n    onChange\n  } = _ref3;\n  const inputRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(UpdateForm, {\n    onSubmit: onSubmit,\n    $state: \"update\",\n    $position: update,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      value: value,\n      type: \"text\",\n      onChange: onChange,\n      maxLength: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s3(UPdateForm, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n_c3 = UPdateForm;\nconst Form = styled.form`\n  box-sizing: border-box;\n  width: 500px;\n  height: 50px;\n  background-color:${_ref4 => {\n  let {\n    $state\n  } = _ref4;\n  return $state === \"update\" ? \"green\" : \"yellow\";\n}};\n  display: flex;\n  align-items: center;\n  position: fixed;\n  transition: 0.5ms linear;\n  left: 0;\n  bottom: 0;\n  margin: 0;\n\n  input {\n    box-sizing: border-box;\n    display: block;\n    width: 100%;\n    height: 30px;\n  }\n`;\n_c4 = Form;\nconst UpdateForm = styled(Form)`\n  bottom: ${_ref5 => {\n  let {\n    $position\n  } = _ref5;\n  return $position ? \"0\" : \"-50px\";\n}};\n`;\n_c5 = UpdateForm;\nconst TodosBox = styled.div`\n  box-sizing: border-box;\n  width: 300px;\n  height: 40px;\n  display: flex;\n  padding: 0 10px;\n  align-items: center;\n  border-radius: 50px;\n  border: 1px solid black;\n  background-color: black;\n  color: white;\n  margin: 10px;\n  gap:4px\n`;\n_c6 = TodosBox;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Todos\");\n$RefreshReg$(_c3, \"UPdateForm\");\n$RefreshReg$(_c4, \"Form\");\n$RefreshReg$(_c5, \"UpdateForm\");\n$RefreshReg$(_c6, \"TodosBox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","styled","jsxDEV","_jsxDEV","token","instance","create","baseURL","App","_s","todos","setTodos","getTodos","res","get","data","newtodos","setNewTodos","onChangeInput","e","target","value","onSubmitHandler","preventDefault","id","Date","now","title","post","children","fileName","_jsxFileName","lineNumber","columnNumber","Form","onSubmit","type","onChange","maxLength","map","_ref","Todos","todoid","_c","_ref2","_s2","onDeleteHandler","filter","todo","delete","update","setUpdate","onUpdateHandler","pre","updatetodos","setUpdateTodos","patch","TodosBox","onClick","UPdateForm","_c2","_ref3","_s3","$position","inputRef","UpdateForm","$state","ref","_c3","form","_ref4","_c4","_ref5","_c5","div","_c6","$RefreshReg$"],"sources":["/Users/edwin.youngchan.park/Documents/sparta/inocamp/03주특기/InocamReactPrec/axios-thunk/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport axios from 'axios'\nimport {styled} from 'styled-components'\n\nconst token = null\n\n/* AXIOS ------------------------------------------------------------------ */\n/* \n  네트워크 통신 라이브러리 \n  (1) 인스턴스 생성\n  (2) 인터셉터 가능 >> 통신라이브러리 >> 요청(클 -> 서)과 응답(서 -> 클)\n      요청 클라 -- (어떤 동작) --> 서버\n      응답 서버 -- (어떤 동작) --> 클라\n*/\nconst instance = axios.create({\n  baseURL:\"http://localhost:3001/\"\n}) // todos \n\n// const instance3004 = axios.create({\n//   baseURL:\"http://localhost:3004/\"\n// }) // Users\n\n// instance.interceptors.request.use(\n//   function (config) {\n//     console.log(\"인터셉터 요청 성공!\");\n//     config.headers.Authorization = token ? `Bearer ${token}` : \"\";\n//     return config\n//   },\n//   function (error) {\n//     console.log(\"인터셉터 요청 오류!\");\n//     return Promise.reject(error)\n//   } \n// )\n\n// instance.interceptors.response.use(\n//   function (config) {\n//     console.log(\"인터셉터 응답 성공!\");\n//     return config\n//   },\n//   function (error) {\n//     console.log(\"인터셉터 응답 오류!\");\n//     return Promise.reject(error)\n//   } \n// )\n\n/* App.js ------------------------------------------------------------------- */\n\nfunction App() {\n  \n  // AXIOS GET 기능구현 : CRUD (1) READ\n  const [todos, setTodos] = useState()\n  const getTodos = async () => {\n    const res = await instance.get(\"/todos\");\n    setTodos(res.data);\n  }; // 비동기통신으로 서버의 데이터를 불러올 getTodos 만들었죠. 호출해야 동작을 하는데 언제 호출할까? // (1) 해당 컴포넌트에 접근했을 때 // (2) 서버 데이터가 변경되었을 때 \n  \n  useEffect(()=>{  \n    getTodos() // AXIOS POST (3) 서버에 다시 요청을 해서, todos와 서버의 데이터를 동기화 합니다. \n  },[setTodos]) // 의존선배열이 변경되면, useEffect 그때마다 동작을 하니까 \n\n  // AXIOS POST 기능구현 : CRUD (2) CREATE\n  const [newtodos, setNewTodos] = useState(\"\")\n  const onChangeInput = (e) => {\n    setNewTodos(e.target.value)\n  }\n\n  const onSubmitHandler = async (e) => {\n    e.preventDefault()\n    setTodos([...todos, {id:Date.now(), title:newtodos}]) // (1) 리렌더링을 발생시키기 위해서, todos의 상태를 변경합니다. // 리렌더링 준비\n    await instance.post(\"/todos\", {id:Date.now(), title:newtodos})  // 비동기통신 // (2) 서버를 업데이트 \n    setNewTodos(\"\")\n  } // 리렌더링 발생\n\n  return (\n    <div>\n      <p>JSON-Server</p>\n      <Form onSubmit={onSubmitHandler}>\n        <input value={newtodos} type='text' onChange={onChangeInput} maxLength={10}/>\n      </Form>\n      {todos && todos.map(({id, title}) => <Todos key={id} todoid={id} title={title} todos={todos} setTodos={setTodos}/>)}\n    </div>\n  )\n}\n\nexport default App\n\n\nconst Todos = ({todoid, title, todos, setTodos}) => {\n    // AXIOS DELETE 기능구현 : CRUD (3) DELETE\n  const onDeleteHandler = async () => {\n    setTodos([...todos.filter(todo => todo.id !== todoid)]) // (1) 리렌더링을 발생시키기 위해서, todos의 상태를 변경합니다.  // 리렌더링 준비\n    await instance.delete(`/todos/${todoid}`) // 비동기통신 // (2) 서버를 업데이트 \n  } // 리렌더링 발생\n\n  // AXIOS UPDATE 기능구현 : CRUD (4) UPDATE\n  const [update,setUpdate] = useState(false) // 조건부 렌더링\n  // const inputRef = useRef(null)\n  const onUpdateHandler = () => {\n    setUpdate(pre => !pre)\n  }\n  \n  const [updatetodos, setUpdateTodos] = useState(title) // 수정할 title의 valuse\n  const onChangeInput = (e) => {\n    setUpdateTodos(e.target.value)\n  }\n\n  const onSubmitHandler = (todoid) => async (e) => {\n    e.preventDefault()\n    setTodos([...todos.map(todo => todo.id === todoid ? {...todo, title:updatetodos} : todo)]) // (1) 리렌더링 // 리렌더링 준비\n    await instance.patch(`/todos/${todoid}`, {title:updatetodos}) // PATCH(일부데이터만 수정할 때), PUT(완전히 다 바꿈, 덮어쓰기) (2) 서버를 업데이트\n    setUpdate(pre=>!pre)\n  } // 리렌더링 발생\n\n  return (\n    <TodosBox>\n        <button onClick={onDeleteHandler}>삭제</button>\n        <button onClick={onUpdateHandler}>수정</button>\n        <p>{title}</p>\n        <UPdateForm/>\n            {/* <UpdateForm onSubmit={onSubmitHandler(todoid)} $state=\"update\" $position={update}>\n              <input ref={inputRef} value={updatetodos} type='text' onChange={onChangeInput} maxLength={10}/>\n            </UpdateForm> */}\n    </TodosBox>\n    \n  )\n}\n\nconst UPdateForm = ({onSubmit, $position, value, onChange}) => {\n  const inputRef = useRef(null)\n  return (\n    <UpdateForm onSubmit={onSubmit} $state=\"update\" $position={update}>\n      <input ref={inputRef} value={value} type='text' onChange={onChange} maxLength={10}/>\n    </UpdateForm>\n  )\n}\n\nconst Form = styled.form`\n  box-sizing: border-box;\n  width: 500px;\n  height: 50px;\n  background-color:${({$state}) => $state === \"update\" ? \"green\" : \"yellow\"};\n  display: flex;\n  align-items: center;\n  position: fixed;\n  transition: 0.5ms linear;\n  left: 0;\n  bottom: 0;\n  margin: 0;\n\n  input {\n    box-sizing: border-box;\n    display: block;\n    width: 100%;\n    height: 30px;\n  }\n`\n\nconst UpdateForm = styled(Form)`\n  bottom: ${({$position}) => $position ? \"0\" : \"-50px\"};\n`\n\n\nconst TodosBox = styled.div`\n  box-sizing: border-box;\n  width: 300px;\n  height: 40px;\n  display: flex;\n  padding: 0 10px;\n  align-items: center;\n  border-radius: 50px;\n  border: 1px solid black;\n  background-color: black;\n  color: white;\n  margin: 10px;\n  gap:4px\n`\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}