{"ast":null,"code":"var _jsxFileName = \"/Users/edwin.youngchan.park/Documents/sparta/inocamp/03\\u110C\\u116E\\u1110\\u1173\\u11A8\\u1100\\u1175/InocamReactPrec/threejs/src/App.js\";\nimport React from 'react';\nimport { GlobalStyle } from './styled';\nimport { Canvas } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Canvas, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n/*\n  <Canvas> 내부에는 다음의 요소만을 사용할 수 있다 Mesh, BufferGeometry, Material\n  기타, HTML 태그들은 <Canvas> 외부에서 선언해야 한다. \n\n  Three.js 맥락에서 Mesh, BufferGeometry 및 Material은 3D 그래칙을 렌더링 하는 데 사용되는 기본 구성 요소로\n\n  \n\n*/\n\n// import React, { useState } from \"react\";\n// import { Canvas, useFrame } from \"@react-three/fiber\";\n// import { OrbitControls } from '@react-three/drei';\n\n// function App() {\n\n//   return (\n//     <div>\n//       <h1>Three.js 다뤄보기</h1>\n//       <Canvas>\n//       <OrbitControls autoRotate={true}/>\n//         <mesh>\n//           <ambientLight intensity={1} />\n//           <directionalLight position={[-1,0,1]}  intensity={0.8} />\n//           <boxGeometry args={[5, 3, 3]} />\n//           <meshStandardMaterial attach=\"material\" color=\"blue\"/>\n//         </mesh>\n//       </Canvas>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// function MyRotatingBox ()  {\n//   const myMesh = React.useRef();\n//   const [active, setActive] = useState(false);\n//   useFrame(({ clock }) => {\n//     const a = clock.getElapsedTime();\n//     myMesh.current.rotation.x = a;\n//   });\n//   return (\n//     <mesh \n//     scale={active ? 1.5 : 1}\n//     onClick={()=> setActive(!active)}\n//     ref={myMesh}\n//   >\n//     <boxGeometry />\n//     <meshStandardMaterial color=\"orange\"/>\n//   </mesh>\n//   )\n// }\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","GlobalStyle","Canvas","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/edwin.youngchan.park/Documents/sparta/inocamp/03주특기/InocamReactPrec/threejs/src/App.js"],"sourcesContent":["import React from 'react'\nimport { GlobalStyle } from './styled'\nimport { Canvas } from '@react-three/fiber'\n\nfunction App() {\n  return (\n    <div>\n      <GlobalStyle />\n      <Canvas>\n\n      </Canvas>\n    </div>\n  )\n}\n\nexport default App\n\n\n/*\n  <Canvas> 내부에는 다음의 요소만을 사용할 수 있다 Mesh, BufferGeometry, Material\n  기타, HTML 태그들은 <Canvas> 외부에서 선언해야 한다. \n\n  Three.js 맥락에서 Mesh, BufferGeometry 및 Material은 3D 그래칙을 렌더링 하는 데 사용되는 기본 구성 요소로\n\n  \n\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from \"react\";\n// import { Canvas, useFrame } from \"@react-three/fiber\";\n// import { OrbitControls } from '@react-three/drei';\n\n// function App() {\n  \n//   return (\n//     <div>\n//       <h1>Three.js 다뤄보기</h1>\n//       <Canvas>\n//       <OrbitControls autoRotate={true}/>\n//         <mesh>\n//           <ambientLight intensity={1} />\n//           <directionalLight position={[-1,0,1]}  intensity={0.8} />\n//           <boxGeometry args={[5, 3, 3]} />\n//           <meshStandardMaterial attach=\"material\" color=\"blue\"/>\n//         </mesh>\n//       </Canvas>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n// function MyRotatingBox ()  {\n//   const myMesh = React.useRef();\n//   const [active, setActive] = useState(false);\n//   useFrame(({ clock }) => {\n//     const a = clock.getElapsedTime();\n//     myMesh.current.rotation.x = a;\n//   });\n//   return (\n//     <mesh \n//     scale={active ? 1.5 : 1}\n//     onClick={()=> setActive(!active)}\n//     ref={myMesh}\n//   >\n//     <boxGeometry />\n//     <meshStandardMaterial color=\"orange\"/>\n//   </mesh>\n//   )\n// }"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,UAAU;AACtC,SAASC,MAAM,QAAQ,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,gBACEF,OAAA,CAACH,WAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACfN,OAAA,CAACF,MAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACC,EAAA,GATQN,GAAG;AAWZ,eAAeA,GAAG;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAqBA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}