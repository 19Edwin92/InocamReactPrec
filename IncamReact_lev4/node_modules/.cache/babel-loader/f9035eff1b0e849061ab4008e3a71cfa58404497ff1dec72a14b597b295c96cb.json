{"ast":null,"code":"var _jsxFileName = \"/Users/edwin.youngchan.park/Documents/sparta/inocamp/03\\u110C\\u116E\\u1110\\u1173\\u11A8\\u1100\\u1175/InocamReactPrec/IncamReact_lev4/src/components/Comments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { styled } from 'styled-components';\nimport { useGetCommentRTKQuery, usePostTodoCommentRTKMutaion, usePostTodoCommentRTKMutation } from '../redux/api/todortkquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments(_ref) {\n  _s();\n  let {\n    id\n  } = _ref;\n  const [show, setShow] = useState(false);\n  const [input, setInput] = useState({\n    nackName: \"\",\n    comment: \"\"\n  });\n  const onChangeHandler = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInput({\n      ...input,\n      [name]: value\n    });\n  };\n\n  // 댓글가져오기 \n  const {\n    data\n  } = useGetCommentRTKQuery(id);\n  const [postComment] = usePostTodoCommentRTKMutation(id);\n  const onSubmitHandler = () => {\n    console.log();\n    postComment({\n      id,\n      commentId: Date.now(),\n      ...input\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(CommentsST, {\n    $state: show,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: () => setShow(pre => !pre),\n      children: show ? \"눌러서 댓글 내리기\" : \"눌러서 댓글보기\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input.nackName,\n      type: \"text\",\n      placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694(5\\uC790 \\uC774\\uB0B4)\",\n      name: \"nackName\",\n      maxLength: 5,\n      onChange: onChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input.comment,\n      type: \"text\",\n      placeholder: \"\\uB313\\uAE00\\uC744 \\uCD94\\uAC00\\uD558\\uC138\\uC694(100\\uC790 \\uC774\\uB0B4)\",\n      name: \"comment\",\n      maxLength: 100,\n      onChange: onChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"\\uCD94\\uAC00\\uD558\\uAE30\",\n      onClick: onSubmitHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"k+IAvB0oWn79tdZ2D9pkidXiiHc=\", false, function () {\n  return [useGetCommentRTKQuery, usePostTodoCommentRTKMutation];\n});\n_c = Comments;\nexport default Comments;\nconst CommentsST = styled.div`\n  position: absolute;\n  width: 800px;\n  height: ${_ref2 => {\n  let {\n    $state\n  } = _ref2;\n  return $state ? \"400px\" : \"50px\";\n}};\n  background-color: #ffff6d;\n  bottom: 0;\n  transition: height 400ms ease-in-out;\n\n`;\n_c2 = CommentsST;\nvar _c, _c2;\n$RefreshReg$(_c, \"Comments\");\n$RefreshReg$(_c2, \"CommentsST\");","map":{"version":3,"names":["React","useState","styled","useGetCommentRTKQuery","usePostTodoCommentRTKMutaion","usePostTodoCommentRTKMutation","jsxDEV","_jsxDEV","Comments","_ref","_s","id","show","setShow","input","setInput","nackName","comment","onChangeHandler","e","name","value","target","data","postComment","onSubmitHandler","console","log","commentId","Date","now","CommentsST","$state","children","onClick","pre","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","maxLength","onChange","_c","div","_ref2","_c2","$RefreshReg$"],"sources":["/Users/edwin.youngchan.park/Documents/sparta/inocamp/03주특기/InocamReactPrec/IncamReact_lev4/src/components/Comments.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { styled } from 'styled-components'\nimport { useGetCommentRTKQuery, usePostTodoCommentRTKMutaion, usePostTodoCommentRTKMutation } from '../redux/api/todortkquery'\n\nfunction Comments({id}) {\n  const [show, setShow] = useState(false)\n  const [input, setInput] = useState({\n    nackName:\"\",\n    comment:\"\"\n  })\n\n  const onChangeHandler = (e) => {\n    const {name, value} = e.target\n    setInput({...input, [name]:value})\n  }\n\n  // 댓글가져오기 \n  const {data} = useGetCommentRTKQuery(id)\n  const [postComment] = usePostTodoCommentRTKMutation(id)\n\n  const onSubmitHandler = () => {\n    console.log();\n    postComment({id,commentId:Date.now(), ...input})\n  }\n\n\n  return (\n    <CommentsST $state={show} >\n      <h2 onClick={()=>setShow(pre=>!pre)} >{show ? \"눌러서 댓글 내리기\" : \"눌러서 댓글보기\"}</h2>\n      <input value={input.nackName} type='text' placeholder='이름을 입력하세요(5자 이내)' name='nackName' maxLength={5} onChange={onChangeHandler}/>\n      <input value={input.comment} type='text' placeholder='댓글을 추가하세요(100자 이내)' name='comment' maxLength={100} onChange={onChangeHandler}/>\n      <input type='button' value=\"추가하기\" onClick={onSubmitHandler}/>\n    </CommentsST>\n  )\n}\n\nexport default Comments\n\nconst CommentsST = styled.div`\n  position: absolute;\n  width: 800px;\n  height: ${({$state}) => $state ? \"400px\" : \"50px\"};\n  background-color: #ffff6d;\n  bottom: 0;\n  transition: height 400ms ease-in-out;\n\n`"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}